name: Deploy to EC2

on:
  push:
    branches:
      - release
  pull_request:
    branches:
      - release

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: "temurin"

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      - name: Docker build & push to DockerHub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -f Dockerfile -t ${{ secrets.DOCKERHUB_REPO}}/app-back:latest .
          docker push ${{ secrets.DOCKERHUB_REPO }}/app-back:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.5
        id: deploy
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Stopping existing Docker container..."
            docker ps -q | xargs -r docker stop
            docker ps -q | xargs -r docker rm -f
            
            echo "Pulling latest image..."
            docker pull ${{ secrets.DOCKERHUB_REPO }}/app-back:latest
            
            echo "Restarting services..."
            docker-compose down
            docker-compose up -d
            
            echo "Cleaning up old images..."
            docker image prune -f
